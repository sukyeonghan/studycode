package com.first.test;

import java.util.Calendar;
import java.util.Scanner;

public class TestMain {
	
	public static void main(String[] args) {
		
		Test test = new Test();
		System.out.println(test.getName());
	
		
	
		//가위바위보 게임
		Scanner sc = new Scanner(System.in);
		
		System.out.println("=== 가위, 바위, 보 게임! ===");
		
		while(true) {
			
			System.out.println("번호를 입력하세요. \n 1.가위 2.바위  3.보 ");
			int user = sc.nextInt();
			
			int com = (int)(Math.random()*3)+1;  
			//임의 수 출력. Math클래스에 random() 메소드가 있음
			//한 번 실행할 때마다 실수 임의의 값(0.0~1.0사이) 나옴
			//그냥 int로 바꾸면 0이 나옴..()쳐서 먼저 계산 해야함. 형변환이 우선순위여서
			//1~10까지면 *10+1, 써져있는 거 n-1 까지, +1을 더하면 1~n까지의 수
			
			
			int game = user-com;
			
			if(game==-2||game==1) {
				System.out.println("사용자가 이겼습니다.");
				break;
			} else if(game==2||game==-1) {
				System.out.println("컴퓨터가 이겼습니다.");
				break;
			} else {
				System.out.println("비겼습니다. 다시 한 번,\n");
			}
		
		} 		

		//이름을 입력받고 출력 프로그램 만들기
		//1.몇명 이름을 입력할지 입력받고
		//2.그 수 만큼 배열을 만들어 이름을 입력받아 저장하고
		//3.배열을 출력하기
							
		Scanner sc1 = new Scanner(System.in);
							
		System.out.print("인원 수 :");
		int pe = sc.nextInt();
							
		String[] pe2 = new String[pe];
							
		for(int i=0; i<pe2.length; i++) {
			System.out.print("이름 입력 : ");
			pe2[i]=sc.next();
		}
		for(int i=0; i<pe2.length; i++) {
			System.out.println(pe2[i]);	 	
		}
	
	
		
//		//객체 배열 선언하기
//		Nation[] nations;
//		//배열 할당 -> 저장공간확보하기
//		nations=new Nation[3];
//		//주의!
//		//System.out.println(nations[0].getName());//에러남
//		//초기값 null. 주소값 없음. 변수 집어넣기 전에 접근해서
//		
//		//index 이용하여 배열에 객체 넣기
//		//Nation이라는 자료형을 갖는 주소를 넣어야 함
//		//nations[0] 하나의 변수명이라고 보면 됨
//		nations[0]=new Nation("한국",6000,"한국어",100,"무궁화");
//		//Nation n = new Nation("한국",6000,"한국어",100,"무궁화"); 같음
//		//n.getName(); 해서 불러왔었음
//		nations[1]=new Nation("미국",30000,"영어",10000,"장미");
//		nations[2]=new Nation("중국",150000,"중국어",10000,"매화");
//		
//		//배열에 저장된 객체 불러오기
//		System.out.println(nations[0].getName());
//		
//		//for문 이용한 초기화 방법
//		Nation[] nations2 = new Nation[10];
//		
//		for(int i=0; i<nations2.length; i++) {
//			nations2[i] = new Nation(); //default로 초기화 됨
//		}
//		for(int i=0; i<nations2.length; i++) {
//			System.out.println(nations2[i]);
//		}
//		
//		//객체 배열은 for each문 사용이 가능한가??
//		for(Nation n : nations) {
//			System.out.println(n.getName());
//		}
//		
	
	
	}
	
		
		public void test7() {
			//문자열 변수를 초기화한 후 
			//생년,생월,생일,성별에 대한 값을 분리 추출하기 - substring() 사용
			//java.util.Date 등을 사용해서 추출한 생년월일 값으로 날짜 데이터 만들기
			//생일의 요일이 무슨 요일이었는지 제공되는 메소드를 사용해서 출력하기
			//성별값이 1이면 남자, 2면 여자라고 출력하기
			//날짜 데이터로 바꾼 값에서 오늘 날짜의 년도를 빼서 나이 출력하기
			
			String personID = "881225-1234567";
			int myYear = Integer.parseInt(personID.substring(0,2))+1900;
			int myMonth = Integer.parseInt(personID.substring(2,4));
			int myDate = Integer.parseInt(personID.substring(4,6));
			int gender = Integer.parseInt(personID.substring(7,8));
			
			Calendar cal = Calendar.getInstance();
			int year = cal.get(Calendar.YEAR);
			
			int age = year-myYear;
			System.out.println(age+1);
		}

	
		
		private static String name; //클래스 변수
		
		private int su; //멤버변수
		
		public void setSu(int su) { 
			this.su=su;
		}
		public int getSu() {
			return this.su;
		}
		
		
		//클래스변수와 멤버변수의 차이
		//클래스변수는 프로그램 시작과 동시에 static영역 메모리공간에 할당(공간 확보)됨
		//멤버변수는 클래스가 new연산자를 통해 객체화(생성) 됐을 때 할당됨-이 때 this 사용 가능.
		
		//static 변수에 접근하기 위한 getter/setter
		//static으로 받으려면 이렇게 바꿔줘야함
//		public static String getName() {
//			return StaticVariableTest.name; //클래스변수접근 -> 클래스명.변수명
//		}
//		public static void setName(String name) {
//			StaticVariableTest.name=name;
			//클래스변수는 new 전에 벌써 생성됨
			//this는 new할 때마다 생기는 객체의 주소값을 나타냄. 자기 자신을 참조하고 싶을 때 쓰는 예약어		
//		}
		
//		public void setName(String name) {
//			this.name=name; //이건 멤버메소드. new로 생성
//		}
	}


